<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JPA on GitOrko</title><link>https://gitorko.github.io/tags/jpa/</link><description>Recent content in JPA on GitOrko</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 30 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gitorko.github.io/tags/jpa/index.xml" rel="self" type="application/rss+xml"/><item><title>Ticket Booking System</title><link>https://gitorko.github.io/post/ticket-booking-system/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://gitorko.github.io/post/ticket-booking-system/</guid><description>
A Ticket Booking system developed with Spring Boot, Spring JPA, Redis and Angular (Clarity) frontend.</description></item><item><title>Spring - Angular</title><link>https://gitorko.github.io/post/spring-angular/</link><pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate><guid>https://gitorko.github.io/post/spring-angular/</guid><description>
Spring Boot web application with angular and JWT authentication support, uses clarity for UI components and chart.js for rendering charts.</description></item><item><title>Spring - Thymeleaf</title><link>https://gitorko.github.io/post/spring-thymeleaf/</link><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate><guid>https://gitorko.github.io/post/spring-thymeleaf/</guid><description>
Spring Boot MVC application with Thymeleaf template &amp; basic spring security support, uses bootstrap for CSS and chart.js for rendering charts.</description></item><item><title>Optimistic vs Pessimistic Locking</title><link>https://gitorko.github.io/post/optimistic-pessimistic-locking/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><guid>https://gitorko.github.io/post/optimistic-pessimistic-locking/</guid><description>
Optimistic vs Pessimistic Locking implementation</description></item><item><title>Spring JPA N+1</title><link>https://gitorko.github.io/post/spring-jpa-n-plus-1/</link><pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate><guid>https://gitorko.github.io/post/spring-jpa-n-plus-1/</guid><description>
The N+1 query problem occurs when the framework executes N additional SQL statements to fetch the same data that could have been retrieved when executing the primary SQL query.</description></item></channel></rss>